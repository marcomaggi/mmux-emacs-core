/*
  Part of: MMUX Emacs Core
  Contents: system constants
  Date: Feb  7, 2020

  Abstract



  Copyright (C) 2020 Marco Maggi <mrc.mgg@gmail.com>

  This program is free  software: you can redistribute it and/or  modify it under the
  terms  of  the  GNU General  Public  License  as  published  by the  Free  Software
  Foundation, either version 3 of the License, or (at your option) any later version.

  This program  is distributed in the  hope that it  will be useful, but  WITHOUT ANY
  WARRANTY; without  even the implied  warranty of  MERCHANTABILITY or FITNESS  FOR A
  PARTICULAR PURPOSE.  See the GNU General Public License for more details.

  You should have received  a copy of the GNU General Public  License along with this
  program.  If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef MMEC_CONSTANTS_H
#define MMEC_CONSTANTS_H 1


/** --------------------------------------------------------------------
 ** Headers.
 ** ----------------------------------------------------------------- */

#include <limits.h>


/** --------------------------------------------------------------------
 ** Size of basic types in measured in bytes.
 ** ----------------------------------------------------------------- */

#define MMEC_SIZEOF_CHAR		(@VALUEOF_MMUX_SIZEOF_CHAR@)
#define MMEC_SIZEOF_SIGNED_CHAR	(@VALUEOF_MMUX_SIZEOF_UNSIGNED_CHAR@)
#define MMEC_SIZEOF_UNSIGNED_CHAR	(@VALUEOF_MMUX_SIZEOF_UNSIGNED_CHAR@)
#define MMEC_SIZEOF_WCHAR		(@VALUEOF_MMUX_SIZEOF_WCHAR@)

#define MMEC_SIZEOF_SSHRT		(@VALUEOF_MMUX_SIZEOF_SIGNED_SHORT_INT@)
#define MMEC_SIZEOF_USHRT		(@VALUEOF_MMUX_SIZEOF_UNSIGNED_SHORT_INT@)
#define MMEC_SIZEOF_SINT		(@VALUEOF_MMUX_SIZEOF_SIGNED_INT@)
#define MMEC_SIZEOF_UINT		(@VALUEOF_MMUX_SIZEOF_UNSIGNED_INT@)
#define MMEC_SIZEOF_SLONG		(@VALUEOF_MMUX_SIZEOF_SIGNED_LONG_INT@)
#define MMEC_SIZEOF_ULONG		(@VALUEOF_MMUX_SIZEOF_UNSIGNED_LONG_INT@)
#define MMEC_SIZEOF_SLLONG		(@VALUEOF_MMUX_SIZEOF_SIGNED_LONG_LONG_INT@)
#define MMEC_SIZEOF_ULLONG		(@VALUEOF_MMUX_SIZEOF_UNSIGNED_LONG_LONG_INT@)

#define MMEC_SIZEOF_SSIZE		(@VALUEOF_MMUX_SIZEOF_SSIZE_T@)
#define MMEC_SIZEOF_USIZE		(@VALUEOF_MMUX_SIZEOF_SIZE_T@)

#define MMEC_SIZEOF_SINTMAX		(@VALUEOF_MMUX_SIZEOF_INTMAX_T@)
#define MMEC_SIZEOF_UINTMAX		(@VALUEOF_MMUX_SIZEOF_UINTMAX_T@)
#define MMEC_SIZEOF_PTRDIFF		(@VALUEOF_MMUX_SIZEOF_PTRDIFF_T@)

#define MMEC_SIZEOF_SINT8		1
#define MMEC_SIZEOF_UINT8		1
#define MMEC_SIZEOF_SINT16		2
#define MMEC_SIZEOF_UINT16		2
#define MMEC_SIZEOF_SINT32		4
#define MMEC_SIZEOF_UINT32		4
#define MMEC_SIZEOF_SINT64		8
#define MMEC_SIZEOF_UINT64		8

#define MMEC_SIZEOF_FLOAT		(@VALUEOF_MMUX_SIZEOF_FLOAT@)
#define MMEC_SIZEOF_DOUBLE		(@VALUEOF_MMUX_SIZEOF_DOUBLE@)
#define MMEC_SIZEOF_LDOUBLE		(@VALUEOF_MMUX_SIZEOF_LDOUBLE@)


/** --------------------------------------------------------------------
 ** Numbers representation range limits.
 ** ----------------------------------------------------------------- */

#define MMEC_SCHAR_MIN	(@VALUEOF_SCHAR_MIN@)
#define MMEC_SCHAR_MAX	(@VALUEOF_SCHAR_MAX@)
#define MMEC_CHAR_MIN	(@VALUEOF_CHAR_MIN@)
#define MMEC_CHAR_MAX	(@VALUEOF_CHAR_MAX@)
#define MMEC_UCHAR_MIN	(0U)
#define MMEC_UCHAR_MAX	(@VALUEOF_UCHAR_MAX@)

#define MMEC_SSHRT_MIN	(@VALUEOF_SHRT_MIN@)
#define MMEC_SSHRT_MAX	(@VALUEOF_SHRT_MAX@)
#define MMEC_USHRT_MIN	(0U)
#define MMEC_USHRT_MAX	(@VALUEOF_USHRT_MAX@U)
#define MMEC_SINT_MIN	(@VALUEOF_INT_MIN@)
#define MMEC_SINT_MAX	(@VALUEOF_INT_MAX@)
#define MMEC_UINT_MIN	(0U)
#define MMEC_UINT_MAX	(@VALUEOF_UINT_MAX@U)
/* FIXME Why  in hell  I cannot  use the  VALUEOF_ constants?   They are  exactly the
   freaking same!!!  GCC  complains with "warning: integer constant is  so large that
   it is unsigned".  (Marco Maggi; Feb 7, 2020) */
#define MMEC_SLONG_MIN	LONG_MIN //(@VALUEOF_LONG_MIN@L)
#define MMEC_SLONG_MAX	LONG_MAX //(@VALUEOF_LONG_MAX@L)
#define MMEC_ULONG_MIN	(0UL)
#define MMEC_ULONG_MAX	(@VALUEOF_ULONG_MAX@UL)
#define MMEC_SLLONG_MIN	LLONG_MIN //(@VALUEOF_LLONG_MIN@LL)
#define MMEC_SLLONG_MAX	LLONG_MAX //(@VALUEOF_LLONG_MAX@LL)
#define MMEC_ULLONG_MIN	(0ULL)
#define MMEC_ULLONG_MAX	(@VALUEOF_ULLONG_MAX@ULL)
#define MMEC_WCHAR_MIN	(@VALUEOF_WCHAR_MIN@LL)
#define MMEC_WCHAR_MAX	(@VALUEOF_WCHAR_MAX@LL)

/* ------------------------------------------------------------------ */

#if   (MMEC_SIZEOF_SSIZE == MMEC_SIZEOF_SINT)
#  define MMEC_SSIZE_MIN	MMEC_SINT_MIN
#  define MMEC_SSIZE_MAX	MMEC_SINT_MAX
#elif (MMEC_SIZEOF_SSIZE == MMEC_SIZEOF_SLONG)
#  define MMEC_SSIZE_MIN	MMEC_SLONG_MIN
#  define MMEC_SSIZE_MAX	MMEC_SLONG_MAX
#elif (MMEC_SIZEOF_SSIZE == MMEC_SIZEOF_SLLONG)
#  define MMEC_SSIZE_MIN	MMEC_SLLONG_MIN
#  define MMEC_SSIZE_MAX	MMEC_SLLONG_MAX
#else
#  define MMEC_SSIZE_MIN	0
#  define MMEC_SSIZE_MAX	0
#endif

#define MMEC_USIZE_MIN	0
#if   (MMEC_SIZEOF_USIZE == MMEC_SIZEOF_SINT)
#  define MMEC_USIZE_MAX	MMEC_SINT_MAX
#elif (MMEC_SIZEOF_USIZE == MMEC_SIZEOF_SLONG)
#  define MMEC_USIZE_MAX	MMEC_SLONG_MAX
#elif (MMEC_SIZEOF_USIZE == MMEC_SIZEOF_SLLONG)
#  define MMEC_USIZE_MAX	MMEC_SLLONG_MAX
#else
#  define MMEC_USIZE_MAX	0
#endif

/* ------------------------------------------------------------------ */

#if   (MMEC_SIZEOF_SINTMAX == MMEC_SIZEOF_SINT)
#  define MMEC_SINTMAX_MIN	MMEC_SINT_MIN
#  define MMEC_SINTMAX_MAX	MMEC_SINT_MAX
#elif (MMEC_SIZEOF_SINTMAX == MMEC_SIZEOF_SLONG)
#  define MMEC_SINTMAX_MIN	MMEC_SLONG_MIN
#  define MMEC_SINTMAX_MAX	MMEC_SLONG_MAX
#elif (MMEC_SIZEOF_SINTMAX == MMEC_SIZEOF_SLLONG)
#  define MMEC_SINTMAX_MIN	MMEC_SLLONG_MIN
#  define MMEC_SINTMAX_MAX	MMEC_SLLONG_MAX
#else
#  define MMEC_SINTMAX_MIN	0
#  define MMEC_SINTMAX_MAX	0
#endif

#define MMEC_UINTMAX_MIN	0
#if   (MMEC_SIZEOF_UINTMAX == MMEC_SIZEOF_SINT)
#  define MMEC_UINTMAX_MAX	MMEC_SINT_MAX
#elif (MMEC_SIZEOF_UINTMAX == MMEC_SIZEOF_SLONG)
#  define MMEC_UINTMAX_MAX	MMEC_SLONG_MAX
#elif (MMEC_SIZEOF_UINTMAX == MMEC_SIZEOF_SLLONG)
#  define MMEC_UINTMAX_MAX	MMEC_SLLONG_MAX
#else
#  define MMEC_UINTMAX_MAX	0
#endif

/* -------------------------------------------------------------------- */

#if   (MMEC_SIZEOF_PTRDIFF == MMEC_SIZEOF_SINT)
#  define MMEC_PTRDIFF_MIN	MMEC_SINT_MIN
#  define MMEC_PTRDIFF_MAX	MMEC_SINT_MAX
#elif (MMEC_SIZEOF_PTRDIFF == MMEC_SIZEOF_SLONG)
#  define MMEC_PTRDIFF_MIN	MMEC_SLONG_MIN
#  define MMEC_PTRDIFF_MAX	MMEC_SLONG_MAX
#elif (MMEC_SIZEOF_PTRDIFF == MMEC_SIZEOF_SLLONG)
#  define MMEC_PTRDIFF_MIN	MMEC_SLLONG_MIN
#  define MMEC_PTRDIFF_MAX	MMEC_SLLONG_MAX
#else
#  define MMEC_PTRDIFF_MIN	0
#  define MMEC_PTRDIFF_MAX	0
#endif

/* -------------------------------------------------------------------- */

#define MMEC_SINT8_MIN	(-128)
#define MMEC_SINT8_MAX	(+127)
#define MMEC_UINT8_MIN	(0)
#define MMEC_UINT8_MAX	(+255)

#define MMEC_SINT16_MIN	(-32768)
#define MMEC_SINT16_MAX	(+32767)
#define MMEC_UINT16_MIN	(0UL)
#define MMEC_UINT16_MAX	(+65535)

#define MMEC_SINT32_MIN	(-2147483648L)
#define MMEC_SINT32_MAX	(+2147483647L)
#define MMEC_UINT32_MIN	(0UL)
#define MMEC_UINT32_MAX	(+4294967295UL)

/* #define MMEC_SINT64_MIN	(-9223372036854775808LL) */
/* #define MMEC_SINT64_MAX	(+9223372036854775807LL) */
#if   (MMEC_SIZEOF_SINT64 == MMEC_SIZEOF_SINT)
#  define MMEC_SINT64_MIN	MMEC_SINT_MIN
#  define MMEC_SINT64_MAX	MMEC_SINT_MAX
#elif (MMEC_SIZEOF_SINT64 == MMEC_SIZEOF_SLONG)
#  define MMEC_SINT64_MIN	MMEC_SLONG_MIN
#  define MMEC_SINT64_MAX	MMEC_SLONG_MAX
#elif (MMEC_SIZEOF_SINT64 == MMEC_SIZEOF_SLLONG)
#  define MMEC_SINT64_MIN	MMEC_SLLONG_MIN
#  define MMEC_SINT64_MAX	MMEC_SLLONG_MAX
#else
#  define MMEC_SINT64_MIN	0
#  define MMEC_SINT64_MAX	0
#endif

#define MMEC_UINT64_MIN	(0ULL)
#define MMEC_UINT64_MAX	(+18446744073709551615ULL)

/* ------------------------------------------------------------------ */

#define MMEC_FLOAT_MIN	(@VALUEOF_FLT_MIN@)
#define MMEC_FLOAT_MAX	(@VALUEOF_FLT_MAX@)
#define MMEC_DOUBLE_MIN	(@VALUEOF_DBL_MIN@)
#define MMEC_DOUBLE_MAX	(@VALUEOF_DBL_MAX@)
#define MMEC_LDOUBLE_MIN	(@VALUEOF_LDBL_MIN@L)
#define MMEC_LDOUBLE_MAX	(@VALUEOF_LDBL_MAX@L)


/** --------------------------------------------------------------------
 ** Constants related to floating-point numbers.
 ** ----------------------------------------------------------------- */

#define MMEC_FLT_ROUNDS		(@VALUEOF_FLT_ROUNDS@)
#define MMEC_FLT_RADIX		(@VALUEOF_FLT_RADIX@)
#define MMEC_FLT_MANT_DIG		(@VALUEOF_FLT_MANT_DIG@)
#define MMEC_DBL_MANT_DIG		(@VALUEOF_DBL_MANT_DIG@)
#define MMEC_LDBL_MANT_DIG		(@VALUEOF_LDBL_MANT_DIG@)
#define MMEC_FLT_DIG			(@VALUEOF_FLT_DIG@)
#define MMEC_DBL_DIG			(@VALUEOF_DBL_DIG@)
#define MMEC_LDBL_DIG		(@VALUEOF_LDBL_DIG@)
#define MMEC_FLT_MIN_EXP		(@VALUEOF_FLT_MIN_EXP@)
#define MMEC_DBL_MIN_EXP		(@VALUEOF_DBL_MIN_EXP@)
#define MMEC_LDBL_MIN_EXP		(@VALUEOF_LDBL_MIN_EXP@)
#define MMEC_FLT_MIN_10_EXP		(@VALUEOF_FLT_MIN_10_EXP@)
#define MMEC_DBL_MIN_10_EXP		(@VALUEOF_DBL_MIN_10_EXP@)
#define MMEC_LDBL_MIN_10_EXP		(@VALUEOF_LDBL_MIN_10_EXP@)
#define MMEC_FLT_MAX_EXP		(@VALUEOF_FLT_MAX_EXP@)
#define MMEC_DBL_MAX_EXP		(@VALUEOF_DBL_MAX_EXP@)
#define MMEC_LDBL_MAX_EXP		(@VALUEOF_LDBL_MAX_EXP@)
#define MMEC_FLT_MAX_10_EXP		(@VALUEOF_FLT_MAX_10_EXP@)
#define MMEC_DBL_MAX_10_EXP		(@VALUEOF_DBL_MAX_10_EXP@)
#define MMEC_LDBL_MAX_10_EXP		(@VALUEOF_LDBL_MAX_10_EXP@)
#define MMEC_FLT_MAX			(@VALUEOF_FLT_MAX@)
#define MMEC_DBL_MAX			(@VALUEOF_DBL_MAX@)
#define MMEC_LDBL_MAX		(@VALUEOF_LDBL_MAX@)
#define MMEC_FLT_MIN			(@VALUEOF_FLT_MIN@)
#define MMEC_DBL_MIN			(@VALUEOF_DBL_MIN@)
#define MMEC_LDBL_MIN		(@VALUEOF_LDBL_MIN@)
#define MMEC_FLT_EPSILON		(@VALUEOF_FLT_EPSILON@)
#define MMEC_DBL_EPSILON		(@VALUEOF_DBL_EPSILON@)
#define MMEC_LDBL_EPSILON		(@VALUEOF_LDBL_EPSILON@)


/** --------------------------------------------------------------------
 ** Done.
 ** ----------------------------------------------------------------- */

#endif /* defined MMEC_CONSTANTS_H */

/* end of file */
